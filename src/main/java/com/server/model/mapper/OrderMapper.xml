<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.server.model.mapper.OrderMapper">
    <!-- ***当数据库中的字段信息与Bean对象的属性不一致时需要通过resultMap来映射,防止异常-用户信息Bean*** -->
<!--    <resultMap type="com.server.model.pojo.UserInfo" id="BaseInfoMap" autoMapping="true">-->
<!--        <result property="mId" column="mId"/>-->
<!--        <result property="mTitle" column="mTitle"/>-->
<!--        <result property="mContent" column="mContent"/>-->
<!--        <result property="mOrder" column="mOrder"/>-->
<!--        <result property="mShopper" column="mShopper"/>-->
<!--        <result property="mTradingPrice" column="mTradingPrice"/>-->
<!--        <result property="mCreateTime" column="mCreateTime"/>-->
<!--        <result property="mEditor" column="mEditor"/>-->
<!--        <result property="mEditTime" column="mEditTime"/>-->
<!--        <result property="mTradingType" column="mTradingType"/>-->
<!--    </resultMap>-->

    <!--订单信息处理逻辑-->
    <!--查询所有-->
    <select id="orderQueryAll" resultType="com.server.model.pojo.OrderInfo">
        select mId,
        mOrderNumber,
        mContent,
        mOrder,
        mShopper,
        mTradingPrice,
        DATE_FORMAT(mCreateTime, "%Y-%m-%d %H:%i:%s") as mCreateTime,
        mEditor,
        DATE_FORMAT(mEditTime, "%Y-%m-%d %H:%i:%s") as mEditTime,
        mTradingType
        from order_info_data
    </select>

    <!--查询所有订单数，包括交易和未交易-->
    <select id="getAllCount" resultType="int">
        SELECT COUNT(*) from order_info_data
    </select>

    <!--查询交易订单数-->
    <select id="getTradingCount" resultType="int">
        SELECT COUNT(*) from order_info_data where mTradingType=1
<!--        <where>-->
<!--            <if test="mTradingType!=0">-->
<!--                mTradingType=#{tradingType}-->
<!--            </if>-->
<!--        </where>-->
    </select>
    <!--查询未交易订单数-->
    <select id="getNotTradingCount" resultType="int">
        SELECT COUNT(*) from order_info_data where mTradingType=0
    </select>
    <!--有效订单总和-->
    <select id="sumTradingPrice" resultType="int">
        SELECT SUM(mTradingPrice) as TradingPriceSum from order_info_data where mTradingType=1
    </select>
    <!--最近一个月内的有效订单数-->
    <select id="getNearMonthCount" resultType="int">
        SELECT COUNT(*)
        from order_info_data
        where mCreateTime >= DATE_SUB(CURDATE(), INTERVAL 1 MONTH) and mTradingType=1
    </select>
    <!--最近一个月内的有效订单总额-->
    <select id="getNearMonthTradingPrice" resultType="int">
--         SELECT SUM(mTradingPrice) as TradingPriceSum
--         from order_info_data
--         where mCreateTime >= DATE_SUB(CURDATE(), INTERVAL 1 MONTH) and mTradingType=1
        SELECT COALESCE(SUM(mTradingPrice), 0) as TradingPriceSum
        from order_info_data
        where mCreateTime >= DATE_SUB(CURDATE(), INTERVAL 1 MONTH) and mTradingType = 1
    </select>
    <!--指定查找当前年所有订单数-->
    <select id="getCurrentYearAllOrderCount" resultType="com.server.model.pojo.OrderInfo">
        SELECT COUNT(*)
        from order_info_data
        where year(mCreateTime) = year(CURDATE())
    </select>
    <!--查找当前年月的订单数据，按照天数分组,包括未交易-->
    <select id="getMonthView" resultType="com.server.model.pojo.MonthCountView">
        SELECT DATE(mCreateTime) as mTime, COUNT(*) as mCount
        from order_info_data
        where month(mCreateTime) = month(curdate())
          and year(mCreateTime) = year(curdate())
        group by mCreateTime
    </select>
    <!--查找当前年月的订单数据，按照天数分组,只含已交易-->
    <select id="getMonthTradingView" resultType="com.server.model.pojo.MonthCountView">
        SELECT DATE(mCreateTime) as mTime, COUNT(*) as mCount
        from order_info_data
        where month(mCreateTime) = month(curdate())
          and year(mCreateTime) = year(curdate())
          and mTradingType=1
        group by mCreateTime
    </select>

    <!--查找当月有效订单数据的产品、类别、销售额按照高到低排序-->
<!--    <select id="getAllTradingView" resultType="com.server.model.pojo.AllTradingView">-->
<!--        SELECT-->
<!--            ROW_NUMBER() OVER (order by order_info_data.mTradingPrice desc) as id,-->
<!--            order_info_data.mTradingPrice,-->
<!--            product_info_data.pName,-->
<!--            product_info_data.pType-->
<!--        from order_info_data join product_info_data-->
<!--        on order_info_data.mShopper = product_info_data.pShopper-->
<!--        where-->
<!--            order_info_data.mTradingType=1-->
<!--        order by order_info_data.mTradingPrice desc-->
<!--    </select>-->
    <select id="getAllTradingView" resultType="com.server.model.pojo.AllTradingView">
        with CTEMP as (
            SELECT
                ROW_NUMBER() OVER (order by (SELECT null)) as id,
                sum(order_info_data.mTradingPrice) as mTradingPrice,
                product_info_data.pName,
                product_info_data.pType
            from order_info_data join product_info_data
            on order_info_data.mShopper = product_info_data.pShopper
            where order_info_data.mTradingType=1
            group by product_info_data.pName, product_info_data.pType
        )
        SELECT
            id,
            mTradingPrice,
            pName,
            pType
        from CTEMP
    </select>
    <!--查询所有产品信息-->
    <select id="getAllProduct" resultType="com.server.model.pojo.Product">
        select pId,
               pName,
               pIcon,
               pDescription,
               pType,
               pShopper,
               pPrice
        from product_info_data
    </select>
    <!--查询最近5条公共信息-->
    <select id="getCurrentMessage" resultType="com.server.model.pojo.MessageView">
        select
            aId,
            aTitle,
            aContent,
            aPublisher,
            aCreateTime,
            aType
        from announcement_data order by aCreateTime desc limit 5
    </select>

    <!--UpDate逻辑-->
    <!--更新订单-->
    <update id="freshOrder" parameterType="java.util.HashMap">
        update  order_info_data
        <set >
            <if test="mContent!=null">
                mContent=#{mContent},
            </if>
            <if test="mOrder!=null">
                mOrder=#{mOrder},
            </if>
            <if test="mShopper!=null">
                mShopper=#{mShopper},
            </if>
            <if test="mTradingPrice!=0">
                mTradingPrice=#{mTradingPrice},
            </if>
            <if test="mCreateTime!=null">
                mCreateTime=#{mCreateTime},
            </if>
            <if test="mEditor!=null">
                mEditor=#{mEditor},
            </if>
            <if test="mEditTime!=null">
                mEditTime=#{mEditTime},
            </if>
            <if test="mTradingType!=null">
                mTradingType=#{mTradingType}
            </if>
        </set>
        <where>
            <if test="mId!=0">
                mId=#{mId}
            </if>
            and
            <if test="mOrderNumber!=null">
                mOrderNumber=#{mOrderNumber}
            </if>
        </where>
    </update>
    <!--更新产品图片-->
    <update id="up_product_Icon" parameterType="java.util.HashMap">
        update product_info_data
        <set>
            <if test="pIcon!=null">
                pIcon=#{pIcon},
            </if>
            <if test="pImage!=null">
                pImage=#{pImage}
            </if>
        </set>
        <where>
            <if test="pName!=null">
                pName=#{pName}
            </if>
            and
            <if test="pShopper!=null">
                pShopper=#{pShopper}
            </if>
        </where>
    </update>
    <!--更新产品信息-->
    <update id="up_product_Info" parameterType="java.util.HashMap">
        update product_info_data
        <set>
            <if test="name!=null">
                pName=#{name},
            </if>
            <if test="description!=null">
                pDescription=#{description},
            </if>
            <if test="type!=null">
                pType=#{type},
            </if>
            <if test="shopper!=null">
                pShopper=#{shopper},
            </if>
            <if test="price!=null">
                pPrice=#{price},
            </if>
        </set>
        <where>
            <if test="id!=0">
                pId=#{id}
            </if>
        </where>
    </update>

    <!--Delete逻辑-->
    <delete id="delete_product" parameterType="String">
        delete from product_info_data where pId=#{id}
    </delete>

    <!--insert逻辑-->
    <!--消息发布-->
    <insert id="add_message" parameterType="java.util.HashMap">
        insert into announcement_data
            (aTitle,aContent,aPublisher,aCreateTime) values (#{title},#{content},#{publisher},#{createTime})
    </insert>
    <!--购物车添加-->
    <insert id="add_shopping_cart" parameterType="java.util.HashMap">
        insert into shopping_cart_data
            (cTitle,cContent,cCreator,cShopper,cNumber,cTradingPrice,cCreateTime)
            values (#{title},#{content},#{creator},#{shopper},#{number},#{tradingPrice},#{createTime})
    </insert>
</mapper>